# Syntax of a kgrep replacement line:
# (delim=?) + (anchor) + pattern + new value
# if the line starts with "delim=" the given delimitor is used to seperate the pattern from new value.
# if anchor is given, the replacement only applies to lines that match the anchor. Anchor is a regular expression.
# Everything after a '#' is considered a comment. The comment char can be changed.
# leading and trailing spaces and are ignored. If a space is required use '\s'
# Replacements are case sensitive.

# Options:
# replace all occurance on all input lines. Uncomment to set.
# ReplacementMode=All   # ReplacementMode=First # is default mode
# delim=~	# field seperator
# comment=#     # everthing after the comment char is ignored

# Input line is: "Let's go to the git store." becomes output line: "Let's go to the gitmore store."
git ~ gitmore

# Input line is: "Let's go to the git store." becomes output line: "Let's go to the store."
# i.e. the string 'git' is removed from the line.
git ~ 

# Given "Hello git" becomes "git Hello".
(Hello)\s+(git)     ~  \2 \1

# Given "<chapter id="12"> becomes "chap id is 12".
<chapter id="(.*?)"> ~ chap id is \1

# removes all the tags attributes.
<chapter\s+(.*?)>  ~ <chapter>

# Replace "abc" with "def" only if the line contains "changeme". changeme can be a regular expression
changeme ~ abc ~ def

